{"version":3,"sources":["components/Form.js","components/Forecast.js","App.js","index.js"],"names":["Form","zipCode","handleSubmit","handleChange","onSubmit","required","placeholder","name","value","onChange","type","config","apiUrl","Forecast","props","event","persist","setState","target","preventDefault","axios","get","state","then","res","city","data","description","list","weather","main","temp","feelsLike","feels_like","humidity","wind","speed","catch","error","window","alert","reset","forecastDisplay","this","className","Math","floor","Component","App","path","component","appJsx","ReactDOM","render","document","getElementById"],"mappings":"qRAeeA,EAbF,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,aAA1B,OACX,uBAAMC,SAAUF,EAAhB,UACE,uBACEG,UAAQ,EACRC,YAAY,gBACZC,KAAK,UACLC,MAAOP,EACPQ,SAAUN,IAEZ,wBAAQO,KAAK,SAAb,wBCLEC,EAAS,CACbC,OAAO,4EAAD,OAFO,mCAEP,UAoFOC,E,kDAhFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAaRX,aAAe,SAACY,GACdA,EAAMC,UACN,EAAKC,SAAS,CAAEhB,QAASc,EAAMG,OAAOV,SAhBrB,EAmBnBN,aAAe,SAACa,GACdA,EAAMI,iBAENC,IACGC,IADH,UACUV,EAAOC,QADjB,OAC0B,EAAKU,MAAMrB,UAClCsB,MAAK,SAACC,GAAD,OACJ,EAAKP,SAAS,CACZQ,KAAMD,EAAIE,KAAKD,KAAKlB,KACpBoB,YAAaH,EAAIE,KAAKE,KAAK,GAAGC,QAAQ,GAAGF,YACzCE,QAASL,EAAIE,KAAKE,KAAK,GAAGE,KAAKC,KAC/BC,UAAWR,EAAIE,KAAKE,KAAK,GAAGE,KAAKG,WACjCC,SAAUV,EAAIE,KAAKE,KAAK,GAAGE,KAAKI,SAChCC,KAAMX,EAAIE,KAAKE,KAAK,GAAGO,KAAKC,WAG/BC,OAAM,SAACC,GACNC,OAAOC,MAAM,mCAEjBzB,EAAMG,OAAOuB,SAlCb,EAAKnB,MAAQ,CACXrB,QAAS,GACTwB,KAAM,GACNE,YAAa,GACbE,QAAS,GACTG,UAAW,GACXE,SAAU,GACVC,KAAM,IAVS,E,0CAwCnB,WACE,IAAIO,EACJ,EAOIC,KAAKrB,MANPG,EADF,EACEA,KACAE,EAFF,EAEEA,YACAE,EAHF,EAGEA,QACAG,EAJF,EAIEA,UACAE,EALF,EAKEA,SACAC,EANF,EAMEA,KAkBF,OAZEO,EAHGb,GAAYJ,GAASE,GAAgBK,GAAcE,GAAaC,EAIjE,sBAAKS,UAAU,mBAAf,UACE,wDAA2BnB,KAC3B,oDAAuBE,KACvB,gDAAmBkB,KAAKC,MAAMjB,GAA9B,WACA,8CAAiBgB,KAAKC,MAAMd,GAA5B,WACA,4CAAeE,EAAf,OACA,wCAAWW,KAAKC,MAAMX,GAAtB,aATc,GAelB,sBAAKS,UAAU,UAAf,8BAEE,cAAC,EAAD,CACEf,QAASA,EACT1B,aAAcwC,KAAKxC,aACnBD,aAAcyC,KAAKzC,eAEpBwC,S,GA3EcK,aCIRC,E,4JARb,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,cAAC,IAAD,CAAOK,KAAK,IAAIC,UAAWrC,U,GAJjBkC,a,QCCZI,EACJ,cAAC,IAAD,UACE,cAAC,EAAD,MAIJC,IAASC,OAAOF,EAAQG,SAASC,eAAe,W","file":"static/js/main.d53fc375.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Form = ({ zipCode, handleSubmit, handleChange }) => (\n  <form onSubmit={handleSubmit}>\n    <input\n      required\n      placeholder=\"Enter Zipcode\"\n      name=\"zipCode\"\n      value={zipCode}\n      onChange={handleChange}\n    />\n    <button type=\"submit\">Search</button>\n  </form>\n);\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Form from \"./Form\";\n\n// Open Weather API Call\nconst apiKey = \"ee272a441023608a6dff62d428450270\";\nconst config = {\n  apiUrl: `https://api.openweathermap.org/data/2.5/forecast?units=imperial&us&appid=${apiKey}&zip=`,\n};\n\nclass Forecast extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      zipCode: \"\",\n      city: \"\",\n      description: \"\",\n      weather: \"\",\n      feelsLike: \"\",\n      humidity: \"\",\n      wind: \"\",\n    };\n  }\n\n  handleChange = (event) => {\n    event.persist();\n    this.setState({ zipCode: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    axios\n      .get(`${config.apiUrl}${this.state.zipCode}`)\n      .then((res) =>\n        this.setState({\n          city: res.data.city.name,\n          description: res.data.list[0].weather[0].description,\n          weather: res.data.list[0].main.temp,\n          feelsLike: res.data.list[0].main.feels_like,\n          humidity: res.data.list[0].main.humidity,\n          wind: res.data.list[0].wind.speed,\n        })\n      )\n      .catch((error) => {\n        window.alert(\"Uh oh! Something Went Wrong!\");\n      });\n    event.target.reset();\n  };\n\n  render() {\n    let forecastDisplay;\n    const {\n      city,\n      description,\n      weather,\n      feelsLike,\n      humidity,\n      wind,\n    } = this.state;\n\n    if (!weather && !city && !description && !feelsLike && !humidity && !wind) {\n      forecastDisplay = \"\";\n    } else {\n      forecastDisplay = (\n        <div className=\"forecast-display\">\n          <h1>Current Forecast For: {city}</h1>\n          <h1>Current Conditon: {description}</h1>\n          <h1>Current Temp: {Math.floor(weather)}°F</h1>\n          <h1>Feels Like: {Math.floor(feelsLike)}°F</h1>\n          <h1>Humidity: {humidity}%</h1>\n          <h1>Wind: {Math.floor(wind)} mph</h1>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"heading\">\n        Weather Forecast!\n        <Form\n          weather={weather}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        />\n        {forecastDisplay}\n      </div>\n    );\n  }\n}\n\nexport default Forecast;\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Forecast from \"./components/Forecast\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Route path=\"/\" component={Forecast} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst appJsx = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n\nReactDOM.render(appJsx, document.getElementById(\"root\"));\n"],"sourceRoot":""}